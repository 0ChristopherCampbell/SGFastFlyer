@model SGFastFlyers.ViewModels.CreateOrderViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Place an Order</h2>
@using (Html.BeginForm("Create", "Orders", FormMethod.Post, new
{
    enctype = "multipart/form-data",
    id = "OrdersForm",
    name = "OrdersForm"
}))
{
    @Html.AntiForgeryToken()
    <style>
        div.absolute {
            position: absolute;
            bottom: 10px;
        }
    </style>

    <div class="row">
        <div class="col-sm-8 col-md-8 col-lg-8">
            <h4>Please fill in the details below to create an order. <!--<br />Already have an account? Please logon via the top right hand corner.--></h4>
            <hr />
            <div class="row">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-sm-2 col-md-2 col-lg-2" })
                        <div class="col-sm-10 col-md-10 col-lg-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div><br />
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-sm-2 col-md-2 col-lg-2" })
                        <div class="col-sm-10 col-md-10 col-lg-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div><br />
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-sm-2 col-md-2 col-lg-2" })
                        <div class="col-sm-10 col-md-10 col-lg-10">
                            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div><br />

                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-sm-2 col-md-2 col-lg-2" })
                        <div class="col-sm-10 col-md-10 col-lg-10">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div><br />

                <div class="row">
                    <div class="form-group" oninput="QuotePrice.SetQuotePrice();">
                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-sm-2 col-md-2 col-lg-2" })
                        <div class="col-sm-10 col-md-10 col-lg-10">
                            @Html.TextBoxFor(model => model.Quantity, htmlAttributes: new { @class = "form-control", Placeholder = "Enter Quantity Here, Minimum 5000" })
                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div><br />


                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DeliveryDate, htmlAttributes: new { @class = "control-label col-sm-2 col-md-2 col-lg-2", @title = "Delivery starts on Saturday and will be completed by the following Friday." })
                        <div class="col-sm-10 col-md-10 col-lg-10">
                            @Html.EditorFor(model => model.DeliveryDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Click to Enter Delivery Date Here.", @title = "Delivery starts on Saturday and will be completed by the following Friday.", @readonly = "true" } })
                            @Html.ValidationMessageFor(model => model.DeliveryDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div><br />

                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DeliveryArea, htmlAttributes: new { @class = "control-label col-sm-2 col-md-2 col-lg-2" })
                        <div class="col-sm-10 col-md-10 col-lg-10">
                            @Html.EditorFor(model => model.DeliveryArea, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Suburbs or post codes for delivery." } })
                            @Html.ValidationMessageFor(model => model.DeliveryArea, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div><br />
                <div class="alert alert-dismissible alert-info">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <strong>Heads up! </strong>Metro areas include major cities. For a full list please <a href="~/Content/Documents/SGFastFlyers_Metropolitan _Areas.pdf" target="_blank">Click Here.</a> Thank you.
                </div>
                <div class="row">
                    <div class="form-group" onclick="QuotePrice.SetQuotePrice();">
                        @Html.LabelFor(model => model.IsMetro, htmlAttributes: new { @class = "control-label col-sm-2 col-md-2 col-lg-2" })
                        <div class="col-sm-10 col-md-10 col-lg-10">
                            @Html.CheckBoxFor(model => model.IsMetro, htmlAttributes: new { @checked = true, @class = "form-control", @onchange = "checkandChange()", @value = "true" })
                            @Html.ValidationMessageFor(model => model.IsMetro, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div><br />

                <div class="row">
                    <div class="form-group" id="NeedsPrintCheckBox" onclick="QuotePrice.SetQuotePrice();">
                        @Html.LabelFor(model => model.NeedsPrint, htmlAttributes: new { @class = "control-label col-sm-2 col-md-2 col-lg-2" })
                        <div class="col-sm-10 col-md-10 col-lg-10">
                            @Html.CheckBoxFor(model => model.NeedsPrint, htmlAttributes: new { @class = "form-control", @onchange = "checkandChange()" })
                            @Html.ValidationMessageFor(model => model.NeedsPrint, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div><br />
                <div class="alert alert-dismissible alert-info" id="PrintingHeadsUp" style="display: none;">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <strong>Heads up! </strong>All printing is completed in full colour on 150gsm Gloss Paper. Please <input id="btnShow" type="button" class="btn btn-primary btn-xs" value="Click Here" style="display: none;" /> for a full list of Printing Requirements.
                </div>
                <div class="row">
                    <div class="col-sm-2 col-md-2 col-lg-2">
                        <p><input id="btnShow" type="button" class="btn btn-primary btn-sm" value="Print Requirements" style="display: none;" /></p>
                    </div>
                </div>
                <div id="demo" class="alert alert-dismissible alert-info" style="display: none;">Heads Up! Printing Format.</div>

                <div id="dialog" style="display: none">
                    <div id="PrintInformation">
                        <ul class="alert alert-dismissible alert-info" style="padding-left: 60px; ">
                            <li style="padding-left: 20px;"><strong>Accepted File Types</strong>: <a class="alert-link" href="https://acrobat.adobe.com/us/en/why-adobe/about-adobe-pdf.html" target="_blank">PDF </a>(version 1.4 or higher)</li>
                            <li style="padding-left: 20px;">Artwork must be Print Ready</li>
                            <li style="padding-left: 20px;">2mm Bleed on all sides of the flyer</li>
                            <li style="padding-left: 20px;">3mm Safe Zone on all sides is recommended</li>
                            <li style="padding-left: 20px;">300 dpi resolution for all images in&nbsp;<a class="alert-link" href="https://acrobat.adobe.com/us/en/why-adobe/about-adobe-pdf.html" target="_blank">PDF</a> files</li>
                            <li style="padding-left: 20px;">CMYK or Grey Scale colours only</li>
                            <li style="padding-left: 20px;">Fonts need to be embedded or converted to curves</li>
                            <li style="padding-left: 20px;">We will transport the completed flyers to the distributor ready for delivery.</li>
                        </ul>
                        <p class="alert alert-dismissible alert-danger"><strong>ALL FILES ARE PRINTED AS SUPPLIED TO US</strong></p>
                        <p class="alert alert-dismissible alert-info">
                            Please attach below or use our <a class="alert-link" href="/Home/Contact" target="_blank">Contact Us</a> page.<br />
                            Thank you
                        </p>
                        <p>&nbsp;</p>
                    </div>
                </div>


                <div class="row">
                    <div class="form-group" id="PrintSize1" style="display: none;" onclick="QuotePrice.SetQuotePrice();">
                        @Html.LabelFor(model => model.PrintSize, htmlAttributes: new { @class = "control-label col-sm-2 col-md-2 col-lg-2", @title = "Choose DL (99mm × 210mm, 1/3 A4) or A5 (148mm X 210mm, 1/2 A4). For other sizes please contact us for a quote." })
                        <div class="col-sm-10 col-md-10 col-lg-10">
                            @Html.EnumDropDownListFor(model => model.PrintSize, "-Please select-", htmlAttributes: new { @class = "form-control", @onchange = "checkandChange()", @title = "Choose DL (99mm × 210mm, 1/3 A4) or A5 (148mm X 210mm, 1/2 A4). For other sizes please contact us for a quote." })
                            <span class="error" style="display:none;" id="PrintSize-error" for="PrintSize">
                            </span>
                        </div>
                    </div>
                </div><br />

                <div class="row ">
                    <div class="form-group" id="PrintFormat" style="display: none;" onclick="QuotePrice.SetQuotePrice();">
                        @Html.LabelFor(model => model.PrintFormat, htmlAttributes: new { @class = "control-label col-sm-2 col-md-2 col-lg-2", @title = "Leave ticked if you would like to print on both sides. Untick for only one sided printing." })
                        <div class="col-sm-10 col-md-10 col-lg-10">
                            @Html.CheckBoxFor(model => model.IsDoubleSided, htmlAttributes: new { @checked = true, @class = "form-control", @onchange = "checkandChange()", @title = "Leave ticked if you would like to print on both sides. Untick for only one sided printing." })
                            @Html.ValidationMessageFor(model => model.IsDoubleSided, "", new { @class = "text-danger" })<br /><br />
                        </div>
                    </div>

                </div><br />

                <div class="row ">
                    <div class="form-group" id="Attachment" style="display: none;">
                        @Html.LabelFor(model => model.Attachment, htmlAttributes: new { @class = "control-label col-sm-2 col-md-2 col-lg-2", @title = "Attach your file here. Please see file guidelines for requirements." })
                        <div class="col-sm-10 col-md-10 col-lg-10">
                            @Html.TextBoxFor(model => model.Attachment, new { type = "file", multiple = "true", Placeholder = "Attach Files" })

                        </div>
                    </div>

                </div><br /><br />


                <div class="row">
                    <div class="col-sm-2 col-md-2 col-lg-2">
                        <label>Your quote price: </label>
                    </div>
                    <div class="col-sm-10 col-md-10 col-lg-10">
                        <label id="quotePrice" title="Minimum Order of $400"></label><br /><p style="font-size:x-small">(All prices include GST)</p>
                        @Html.HiddenFor(model => model.Cost)
                    </div><br /><br />
                </div>

                <div class="col-sm-offset-2 col-md-offset-2 col-lg-offset-2">
                    <script id="initialButtonClick" src="https://checkout.stripe.com/checkout.js"></script>

                    <input type="button" name="customButton" id="customButton" value="Pay by Card" class="btn btn-success" style="background-color:#7FFF00" />
                    <input type="hidden" value="" name="token1" id="token1" />
                    <input type="button" name="directDebitEmail" id="directDebitEmail" value="Pay by Direct Debit" class="btn btn-success" style="background-color:#7FFF00" />
                    <input type="hidden" value="" name="hdndirectDebitEmail" id="hdndirectDebitEmail" />
                </div>
            </div>
        </div>
        <div class="col-sm-4 col-md-4 col-lg-4">
            <p></p><p></p>
            <p class="full-circle"></p><br />
            <p class="full-circle-med col-sm-offset-4 col-md-offset-4 col-lg-offset-4"></p><br />
            <p class="full-circle-sm"></p>
            <img class="img-responsive" style="max-height:300px" src="~/Content/Images/Flyers.jpg" alt="logo" />
        </div>

    </div>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="~/Content/bootstrap-theme.css" />

    <script type="text/javascript">
                $(function () {
                    var fileName = document.getElementById("demo").innerHTML;
                    $("#btnShow").click(function () {
                        $("#PrintInformation").dialog({
                            modal: true,
                            title: fileName,
                            width: 540,
                            height: 540,
                            buttons: {
                                Close: function () {
                                    $(this).dialog('close');
                                }
                            },

                        });
                    });
                });
    </script>
            <script>

        var handler = StripeCheckout.configure({
            key: '@SGFastFlyers.Utility.Config.stripeKey',
            image: 'https://stripe.com/img/documentation/checkout/marketplace.png',
            locale: 'auto',
            token: function(token) {
                document.getElementById("token1").value = token.id;
                // alert(token.id);
                document.forms[0].submit();
                return true;
                // You can access the token ID with `token.id`.
                // Get the token ID to your server-side code for use.
            }
        });

        function validatePrintSize() {
            if($("#NeedsPrint").is(':checked') && ($("#PrintSize").val() == "" || $("#PrintSize").val() == 0)) {
                $('#PrintSize-error').css("display", "block");
                $('#PrintSize-error').text("Choose DL (99mm × 210mm, 1/3 A4) or A5 (148mm X 210mm, 1/2 A4). For other sizes please contact us for a quote.");
                return false;
            } else {
                $('#PrintSize-error').css("display", "none");
                $("#PrintSize-error").text("");
                return true;
            }
        }

        document.getElementById('customButton').addEventListener('click', function(e) {
            $("#hdndirectDebitEmail").val();
            var flag = false;

            var $form = $('form');
            if($form.valid()) {
                if(!validatePrintSize()) {
                    flag = true;
                    return false;
                }
            } else {
                if(!validatePrintSize()) {
                    return false;
                }
                return false;
            }

            // Open Checkout with further options:
            var thisEmail = document.getElementById("EmailAddress");
            var amounbt = QuotePrice.SetQuotePrice();
            amounbt = amounbt.replace(/\./gi, "");
            amounbt = amounbt.replace(/\$/gi, "");
            amounbt = amounbt.replace(/\,/gi, "");

            handler.open({
                name: 'Smooth Glass Pty Ltd',
                description: 'Secure Payment Gateway',
                currency: 'aud',
                email:thisEmail.value,
                image:"/Content/Images/logo.jpg",
                amount: parseInt(amounbt)
            });
            e.preventDefault();

        }, true);

        // Close Checkout on page navigation:
        window.addEventListener('popstate', function() {
            handler.close();
        });

        document.getElementById('directDebitEmail').addEventListener('click', function(e) {
            $("#token1").val();
            var flag = false;

            var $form = $('form');
            if($form.valid()) {
                if(!validatePrintSize()) {
                    flag = true;
                    return false;
                }
            } else {
                if(!validatePrintSize()) {
                    return false;
                }
            }
            $("#hdndirectDebitEmail").val(true);
            $('#OrdersForm').submit();
        }, true);
            </script>

            <script type="text/javascript">

                    $(function(){
                        $('input').keydown(function(e){
                            if (e.keyCode == 13) {
                                $("input[value='emailQuote']").focus();
                                return false;
                            }
                        });
                    });
            </script>
                <script type="text/javascript">
                    function checkandChange()
                    {
                        var checkbox = document.getElementById('NeedsPrint');
                        var dependent =  $('#PrintSize1');
                        var dependent2 =   $('#PrintFormat');
                        var dependent3 = $('#Attachment');
                        var printInformation = $('#btnShow');
                        var printDetails = $('#PrintingHeadsUp')
                        if (checkbox.checked) {
                            dependent.show();
                            dependent2.show();
                            dependent3.show();
                            printInformation.show();
                            printDetails.show();
                        }
                        else {
                            dependent.hide();
                            dependent2.hide();
                            dependent3.hide();
                            printInformation.hide();
                            printDetails.hide();
                        }
                    }

                    $(document).ready(function () {
                        checkandChange();
                    });
                </script>
                <script src="~/Scripts/Custom/quoteprice.js"></script>
                <script type="text/javascript">
                    window.onload = QuotePrice.SetQuotePrice();
                </script>
                <script type="text/javascript">
                        $(document).ready(function () {
                            $('input[type=datetime]').datepicker({
                                dateFormat: "yy-mm-dd",
                                daysOfWeekDisabled: "0,1,2,3,4,5",
                                daysOfWeekHighlighted: "6",
                                changeMonth: true,
                                changeYear: true,
                                yearRange: "-0:+5",
                                beforeShowDay: function(date){
                                    if(date.getDay() == 6){
                                        return [true];
                                    } else {
                                        return [false];
                                    }
                                },
                                minDate: "0 +7D"
                            });


                            $.validator.addMethod('date',
                                function (value, element) {
                                    if (this.optional(element)) {
                                        return true;
                                    }
                                    var ok = true;
                                    try {
                                        $.datepicker.parseDate('yy-mm-dd', value);
                                    }
                                    catch (err) {
                                        ok = false;
                                    }
                                    return ok;
                                });
                        });

                    </script>
                    <script>
                        $(document).ready(function() {
                            $('[data-toggle="popover"]').popover({
                                html: true,
                                content: function () {
                                    return $('#popover-content').html();
                                }
                            });

                            $('.forLinks').on('shown.bs.popover', function () {
                                var element = $('.popover'),
                                    style = window.getComputedStyle(element[0]),
                                    left = style.getPropertyValue('left');
                                var leftValue = left.replace("px", "");
                                $('.popover').css('left', parseInt(leftValue) - 5);
                            });

                            $('body').on('click', function (e) {
                                $('[data-toggle=popover]').each(function () {
                                    // hide any open popovers when the anywhere else in the body is clicked
                                    if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.popover').length != 0) {
                                        $('.forLinks').trigger('click');
                                    }
                                });
                            });

                        });
                    </script>

                    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
                    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
                    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
