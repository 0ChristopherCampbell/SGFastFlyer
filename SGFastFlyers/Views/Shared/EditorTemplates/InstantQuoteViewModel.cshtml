@model SGFastFlyers.ViewModels.InstantQuoteViewModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <script src="~/Scripts/Custom/quoteprice.js"></script>
    <script type="text/javascript">
        $(function(){
            $('input').keydown(function(e){
                if (e.keyCode == 13) {
                    $("input[value='emailQuote']").focus();
                    return false;
                }
            });
        });
    </script>

    <h2><b>Get an Instant Quote!</b></h2>
    <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group" oninput="QuotePrice.SetQuotePrice(true);">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-4", @title = "Enter the amount of flyers you would like delivered." })
                @Html.TextBoxFor(model => model.Quantity, htmlAttributes: new { @class = "form-control col-md-3", Placeholder = "Enter Quantity Here, Minimum 5000", @title = "Enter the amount of flyers you would like delivered." })
                <!-- //~~ATSYMBOL~~Html.DropDownListFor(model => model.Quantity, SGFastFlyers.ViewModels.InstantQuoteViewModel.QuantityList, "-Please select-", new { htmlAttributes = new { ~~ATSYMBOL~~class = "form-control" } })-->
            </div>            
        </div>
        <div class="row">
            <div class="form-group">
                <label style="width:32%">&nbsp;</label>
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" }) <br /><br />
            </div>
        </div>
        <div class="row">
            <div class="form-group" onclick="QuotePrice.SetQuotePrice(true);">
                @Html.LabelFor(model => model.IsMetro, htmlAttributes: new { @class = "control-label col-md-4", @title = "Metro areas are major cities." })
                @Html.CheckBoxFor(model => model.IsMetro, htmlAttributes: new { @checked = true, @class = "form-control col-md-3", @title = "Metro areas are major cities." })
                @Html.ValidationMessageFor(model => model.IsMetro, "", new { @class = "text-danger" })<br /><br />
            </div>
        </div>

        <div class="row">
            <div class="form-group" id="NeedsPrintCheckBox" onclick="QuotePrice.SetQuotePrice(true);">

                @Html.LabelFor(model => model.NeedsPrint, htmlAttributes: new { @class = "control-label col-md-4", @title = "Would you like us to organise your flyers to be printed?" })
                @Html.CheckBoxFor(model => model.NeedsPrint, htmlAttributes: new { @class = "form-control col-md-3", @title = "Would you like us to organise your flyers to be printed?", @onchange = "checkandChange()" })
                @Html.ValidationMessageFor(model => model.NeedsPrint, "", new { @class = "text-danger" })<br /><br />

            </div>
        </div>
        <div class="alert alert-dismissible alert-info" id="PrintingHeadsUp">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            <strong>Heads up! </strong>All printing is completed in full colour on 150gsm Gloss Paper.
        </div>
        <div class="row">
            <div class="form-group" id="PrintSize" style="display: none;" onclick="QuotePrice.SetQuotePrice(true);">
                @Html.LabelFor(model => model.PrintSize, htmlAttributes: new { @class = "control-label col-md-4", @title = "Choose DL (99mm × 210mm, 1/3 A4) or A5 (148mm X 210mm, 1/2 A4). For other sizes please contact us for a quote.  All quoted prices are for full colour printing." })
                @Html.EnumDropDownListFor(model => model.PrintSize, "-Please select-", htmlAttributes: new { @class = "form-control col-md-3", @title = "Choose DL (99mm × 210mm, 1/3 A4) or A5 (148mm X 210mm, 1/2 A4). For other sizes please contact us for a quote.  All quoted prices are for full colour printing." })
                <br /><br /><span class="error" style="display:none;" id="PrintSize-error" for="HomePageQuoteViewModel_PrintSize">
                </span>
            </div>

        </div>

        <div class="row">
            <div class="form-group" id="PrintFormat" style="display: none;" onclick="QuotePrice.SetQuotePrice(true);">
                @Html.LabelFor(model => model.PrintFormat, htmlAttributes: new { @class = "control-label col-md-4", @title = "Leave ticked if you would like to print on both sides. Untick for only one sided printing." })
                @Html.CheckBoxFor(model => model.IsDoubleSided, htmlAttributes: new { @checked = true, @class = "form-control col-md-3", @title = "Leave ticked if you would like to print on both sides. Untick for only one sided printing." })
                @Html.ValidationMessageFor(model => model.IsDoubleSided, "", new { @class = "text-danger" })<br /><br />

            </div>

        </div><br />


        <div class="row">
            <div class="col-md-4">
                <label>Your quote price: </label>
            </div>
            <div class="col-md-8">
                <label id="quotePrice" title="Minimum Order of $400"></label><br /><p style="font-size:x-small">(All prices include GST)</p>
                @Html.HiddenFor(model => model.Cost)
            </div>
        </div>

        <script type="text/javascript">

        function checkandChange()
        {
            var checkbox =   document.getElementById('HomePageQuoteViewModel_NeedsPrint');
            var dependent =  $('#PrintSize');
            var dependent2 =   $('#PrintFormat');
            var dependent3 = $('#PrintingHeadsUp')

            if (checkbox.checked){
                dependent.show();
                dependent2.show();
                dependent3.show();


            } else {
                dependent.hide();
                dependent2.hide();
                dependent2.prop('checked', false);
                dependent3.hide();


            }
        }


        $(document).ready(function () {
            checkandChange();
        });


        </script>
}




