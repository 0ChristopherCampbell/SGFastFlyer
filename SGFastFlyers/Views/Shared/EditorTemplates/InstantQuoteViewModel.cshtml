@model SGFastFlyers.ViewModels.InstantQuoteViewModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <script type="text/javascript">
        function setQuotePrice()
        {
            var quantity = 0;
            quantity = (document.getElementById("HomePageQuoteViewModel_Quantity").value)/1000;
            var isMetro = document.getElementById("HomePageQuoteViewModel_IsMetro").checked;
            var needsPrint = document.getElementById("HomePageQuoteViewModel_NeedsPrint").checked;
            var isDoubleSided = document.getElementById("HomePageQuoteViewModel_IsDoubleSided").checked;
            var printSize = document.getElementById("HomePageQuoteViewModel_PrintSize").value;

           
            var cost = 0;
            var dlSingleSided = 0;
            var dlDoubleSided = 0;
            var A5SingleSided = 0;
            var A5DoubleSided = 0;

                if(quantity >= 1 && quantity < 20)
                {
                    cost = 50;
                    dlSingleSided = 40;
                    dlDoubleSided = 43;
                    A5SingleSided = 52;
                    A5DoubleSided = 55.9;
                }
                if (quantity >= 20 && quantity < 50)
                {
                    cost = 49;
                    dlSingleSided = 38;
                    dlDoubleSided = 41;
                    A5SingleSided = 49.4;
                    A5DoubleSided = 53.3;
                }
                if (quantity >= 50 && quantity < 75)
                {
                    cost = 48;
                    dlSingleSided = 36;
                    dlDoubleSided = 41;
                    A5SingleSided = 46.8;
                    A5DoubleSided = 53.3;
                }
                if (quantity >= 75 && quantity <= 100)
                {
                    cost = 47;
                    dlSingleSided = 36;
                    dlDoubleSided = 41;
                    A5SingleSided = 46.8;
                    A5DoubleSided = 53.3;
                }
                if (quantity >= 100 && quantity <= 200)
                {
                    cost = 46;
                    dlSingleSided = 34;
                    dlDoubleSided = 38;
                    A5SingleSided = 44.2;
                    A5DoubleSided = 49.4;
                }
                if (quantity >= 200 && quantity < 300)
                {
                    cost = 45;
                    dlSingleSided = 34;
                    dlDoubleSided = 38;
                    A5SingleSided = 44.2;
                    A5DoubleSided = 49.4;
                }
                if (quantity >= 300)
                {
                    cost = 42;
                    dlSingleSided = 32;
                    dlDoubleSided = 36;
                    A5SingleSided = 41.6;
                    A5DoubleSided = 46.8;
                }
                cost = cost * quantity;
                if ( isMetro == false)
                {
                    cost = cost + @SGFastFlyers.Utility.Config.NonMetroAddition();
                }



            if (needsPrint)


                {
                if (isDoubleSided)

                    {

                    if (printSize == "1")

                        {
                            cost = cost + dlDoubleSided*quantity;
                        }
                if (printSize == "5")
                        {
                            cost = cost + A5DoubleSided * quantity;
                        }
                    }
                    else
                    {

                    if (printSize == "1")
                        {
                            cost = cost + dlSingleSided * quantity;
                        }

                    if (printSize == "5")
                        {
                            cost = cost + A5SingleSided * quantity;
                        }
                    }
                }
                if (cost < 400)
                {
                    cost = 400;
                }

            cost = cost.toLocaleString('aud-AUD', { style: 'currency', currency: 'AUD' });
            document.getElementById("quotePrice").innerHTML = cost;
        }
    </script>

    <h2><b>Get an Instant Quote!</b></h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group" oninput="setQuotePrice();">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-4" , @title = "Enter the amount of flyers you would like delivered." })
                @Html.TextBoxFor(model => model.Quantity, htmlAttributes: new { @class = "form-control col-md-3", Placeholder = "Enter Quantity Here", @title = "Enter the amount of flyers you would like delivered." })
                <!-- //~~ATSYMBOL~~Html.DropDownListFor(model => model.Quantity, SGFastFlyers.ViewModels.InstantQuoteViewModel.QuantityList, "-Please select-", new { htmlAttributes = new { ~~ATSYMBOL~~class = "form-control" } })-->
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })<br /><br />
            </div>
        </div>

        <div class="row">
            <div class="form-group" onclick="setQuotePrice();">
                @Html.LabelFor(model => model.IsMetro, htmlAttributes: new { @class = "control-label col-md-4", @title = "Metro areas are major cities." })
                @Html.CheckBoxFor(model => model.IsMetro, htmlAttributes: new { @checked = true, @class = "form-control col-md-3", @title = "Metro areas are major cities." })
                @Html.ValidationMessageFor(model => model.IsMetro, "", new { @class = "text-danger" })<br /><br />
            </div>
        </div>
       
        <div class="row">
            <div class="form-group" id="NeedsPrintCheckBox" onclick="setQuotePrice();">

                @Html.LabelFor(model => model.NeedsPrint, htmlAttributes: new { @class = "control-label col-md-4", @title = "Would you like us to organise your flyers to be printed?" })
                @Html.CheckBoxFor(model => model.NeedsPrint, htmlAttributes: new { @class = "form-control col-md-3",   @title = "Would you like us to organise your flyers to be printed?", @onchange = "checkandChange()" })
                @Html.ValidationMessageFor(model => model.NeedsPrint, "", new { @class = "text-danger" })<br /><br />

            </div>
        </div>

        <div class="row">
            <div class="form-group" id="PrintSize" style="display: none;" onchange="setQuotePrice();">
                @Html.LabelFor(model => model.PrintSize, htmlAttributes: new { @class = "control-label col-md-4", @title = "Choose DL or A5. For other sizes please contact us for a quote." })
                @Html.EnumDropDownListFor(model => model.PrintSize, "-Please select-", htmlAttributes: new { @class = "form-control col-md-3", @title = "Choose DL or A5. For other sizes please contact us for a quote." })
                @Html.ValidationMessageFor(model => model.PrintSize, "", new { @class = "text-danger" })<br /><br />
            </div>
        </div>

        <div class="row">
            <div class="form-group" id="PrintFormat" style="display: none;" onclick="setQuotePrice();">
                @Html.LabelFor(model => model.PrintFormat, htmlAttributes: new { @class = "control-label col-md-4", @title = "Leave ticked if you would like to print on both sides. Untick for only one sided printing." })
                @Html.CheckBoxFor(model => model.IsDoubleSided, htmlAttributes: new { @checked = true, @class = "form-control col-md-3", @title = "Leave ticked if you would like to print on both sides. Untick for only one sided printing." })
                @Html.ValidationMessageFor(model => model.IsDoubleSided, "", new { @class = "text-danger" })<br /><br />
            </div>
        </div><br />

        <div class="row">
            <div class="col-md-4">
                <label>Your quote price: </label>
            </div>
            <div class="col-md-8">
                <label id="quotePrice" title="Minimum Order of $400"></label>
            </div>
        </div>

    <script type="text/javascript">
         
        function checkandChange()
        {
            var checkbox =   document.getElementById('HomePageQuoteViewModel_NeedsPrint');
            var dependent =  $('#PrintSize');
            var dependent2 =   $('#PrintFormat');
            if (checkbox.checked){                   
                dependent.show();
                dependent2.show();
            } else {                    
                dependent.hide();
                dependent2.hide();
            }
        }

        $(document).ready(function () {                
            checkandChange();             
        });            
    </script>        
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
